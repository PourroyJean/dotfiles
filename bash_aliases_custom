######################################
############# GENERAL ################
######################################
PATH_DOT_FILE=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )


alias lrt='ls -lrt'               # sort by date
alias l.='ls -d .* --color=auto'  # ls only .file
alias mv='mv -i'
alias rm='rm -i'

alias emacs='emacs -nw'       #emacs no graphics

alias which='(alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot'


alias cdd='cd `ls -dt */ | head -1`'              # cd the latest directory created
alias cdt='cd ~/TOOLS/'                           # cd the tools directory
alias CDD='cd ~/TOOLS/dotfiles'                   # alias CDD='cd /users/pourroy/TOOLS/dotfiles'


#Show the diff between two commands
# Usage : DIFF "ls -l" "ls-la"
DIFF (){
  diff <($1) <($2)
}


#Print the content of the last created file (and its name) in the current directory, sorry for the alias name...
#            --  list only file - latest file -  cat with filename -- 
alias caca='ls -tp | grep -v /  | head -1     | xargs tail -v -n +1'

#Change directory then ls...
cd() { builtin cd "$@" && echo -n " --> " && pwd && ls; }

# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

alias ipr='ip route | column -t'
alias ips='ip --brief address show'
alias rm='rm -i'
alias cp='cp -i'
alias mv='mv -i'
alias cp='cp -i'
alias which='(alias; declare -f) | /usr/bin/which --tty-only --read-alias --read-functions --show-tilde --show-dot'

# User specific aliases and functions

#GREP find in file : GREP . string
GREP (){
    #grep -nRHIi --no-messages $1 $2 | column -t -s ":"
    #Unbuffer preserve colors through pipe
    grep --color=auto -nRHIi --no-messages $2 $1 
}


#FIND find filename : FIND . filename
FIND (){
    find $1 -print | grep -i $2
}


hist (){
    if [ $# -eq 0 ]
    then
        echo "Max 1000 lines..."
        history 1000 | cut -c 8-
    else
        history | cut -c 8- | grep $1
    fi
}
#Look for $1 in all the man pages available on the system
MAN (){
  IFS=':' read -r -a array <<< $(manpath)
  for element in "${array[@]}"
  do
    grep -rlIi $1 $element
  done
}

######################################
########### BASH vs ZSH ##############
######################################
BASH_TYPE=`ps -p$$ -o cmd="",comm="",fname="" 2>/dev/null | sed 's/^-//' | grep -oE '\w+' | head -n1`
if [[ $BASH_TYPE == "bash" ]]
then
    hist (){
         if [ $# -eq 0 ]
         then
            echo "Max 1000 lines..."
            history 1000 | cut -c 8-
         else
            history | cut -c 8- | grep $1
         fi
    }
elif [[ $BASH_TYPE == "zsh" ]]
then
    hist (){
         if [ $# -eq 0 ]
         then
            echo "Max 1000 lines..."
            history -1000 | cut -c 8-
         else
            history 0 | cut -c 8- | grep $1
         fi
    }
fi

######################################
########## MAC vs LINUX ##############
######################################
if [[ $OSTYPE == 'darwin'* ]]; then
    alias ls="ls -Gh"
else
    alias ls='ls --color=auto -h' # color + size in MB GB...
fi

######################################
#############   SSH  ################
######################################
alias ssgre="ssh pourroy@16.16.184.23"
alias sspinot="ssh pourroy@10.101.4.20"
alias sslumi="ssh pourroy@lumi.csc.fi"
alias sl1="ssh root@16.1.32.160"
alias sl2="ssh root@15.196.54.32"
alias ci1="ssh root@16.1.32.160"



########## SOURCE OTHER ALIASES #######
source ${PATH_DOT_FILE}/bash_aliases_hpc